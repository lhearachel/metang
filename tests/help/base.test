# input
# output
metang - Generate enumerated constants from plain-text

Usage: metang COMMAND [OPTIONS] [<FILE>]

Commands:
  enum     Generate an integral enumeration.
  mask     Generate a bitmask enumeration.
  help     Display this help text.
  version  Display the version number of this program.

Global Options:
  -L, --lang <LANG>        Generate the enumeration for a target language.
                           If unspecified, generate for the C language.
                           Options: c, py
  -o, --output <OFILE>     Write output to <OFILE>.
                           If unspecified, write to standard output.
  -l, --leader <LEADER>    Use <LEADER> as a prefix for generated symbols.
  -t, --tag-name <NAME>    Use <NAME> as the base tag for enums and lookup
                           tables.
                           If unspecified, <NAME> will be derived from the
                           input file's basename, minus any extension.
  -G, --guard <GUARD>      Prefix conditional directives with <GUARD>. For
                           example, in C, this will prefix inclusion guards.

When using the “enum” command, the following additional options are supported:
  -a, --append <ENTRY>         Append <ENTRY> to the input listing.
  -p, --prepend <ENTRY>        Prepend <ENTRY> to the input listing.
  -n, --start-from <NUMBER>    Start enumeration from <NUMBER>.


When using the “mask” command, the user should mind the following:
  1. The magic values NONE and ANY are automatically prepended and appended
     to user input, respectively. The NONE value is always assigned the value
     0; the ANY value is always assigned the sum of all previous mask indices.
  2. Overrides on assignment values from user input are not permitted. This is
     to ensure that the generated bitmask is contiguous.
  3. As a consequence of (1) and (2), overrides to the starting value are not
     permitted.
